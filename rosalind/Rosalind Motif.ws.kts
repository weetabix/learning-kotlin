class Motif {

    fun motifLocations(motifPair: Pair<String, String>): List<Int> {
        // Pair(strand, subs)
        var motifList = mutableListOf<Int>()
        val strand = motifPair.first
        val subs = motifPair.second
        for (i in 0..strand.length - subs.length) {
            if (strand.substring(i, i + subs.length).indexOf(subs) == 0) {
                motifList.add(i + 1)
            }
        }
        return motifList
    }
}

val text =
    "TGATACTATTATACTATGATACTATTAGATACTATCCGGTATATACTATACATACTATTCATACTATCGATACTATGCGGACCACCGATACTATTGGCTATACTATATACTATATACTATATACTATCGAATACTATGCTCATACTATCTTACAATGGATGAAGCTCAGGACATACTATATGCATACTATGGATACTATGATACTATAGACGATACTATATGGATACTATTTTCATACTATTTTGTCATACTATCTATACTATGTCGTTATACTATGTGAGATACTATCATACTATGGAGGATACTATCATACTATATACTATGCAATACTATATACTATGAATACTATATACTATAATACTATCATACTATGATACTATTAAGGAACATACTATTATACTATTGCGCATACTATATACTATATACTATGGGTCGATACTATATACTATCATACTATATACTATAAGATACTATATACTATTTCAGGATACTATTATACTATATACTATCACCATACTATAATACTATGCGATACTATCAATACTATAGAATACTATATACTATATACTATAATACTATGATACTATATACTATCCGGGCGAATACTATATACTATGGGGTGGATACTATATACTATGTGTAATACTATCAATACTATATTCCATACTATTGGGCTTTCAAATACTATAAATACTATGGATACTATGGAATACTATAATACTATTATACTATCGTGATACTATCATCGTATACTATATACTATGAATACTATGATACTATAATACTATGGTATACTATTGCCAAATACTATATACTATATACTATGCCACGCGCTGAATACTATAATACTATTAGATACTATATACTAT"
val subs = "ATACTATAT"
val foo = Motif()
println(foo.motifLocations(Pair(text, subs)))